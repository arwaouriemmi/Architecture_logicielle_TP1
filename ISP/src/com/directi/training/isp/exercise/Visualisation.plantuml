@startuml

interface Door {
    + lock(): void
    + unlock(): void
    + open(): void
    + close(): void
    + timeOutCallback(): void
    + proximityCallback(): void
}

class SensingDoor {
    - _locked: boolean
    - _opened: boolean
    + lock(): void
    + unlock(): void
    + open(): void
    + close(): void
    + timeOutCallback(): void
    + proximityCallback(): void
}

class TimedDoor {
    - _locked: boolean
    - _opened: boolean
    + lock(): void
    + unlock(): void
    + open(): void
    + close(): void
    + timeOutCallback(): void
    + proximityCallback(): void
}

class Sensor {
    + register(door: Door): void
    - isPersonClose(): boolean
}

class Timer {
    + register(timeOut: long, door: Door): void
}

Door <|.. SensingDoor
Door <|.. TimedDoor
Sensor ..>Door
Timer..>Door

@enduml
